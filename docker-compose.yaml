services:
  api:
    image: '${DOCKER_IMAGE_API?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'python -c "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen(\"http://localhost:8000/api/v1/utils/health-check/\").getcode()==200 else 1)"',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

    # Build the image from the Dockerfile in the api directory
    build:
      context: ./api

    # Host the FastAPI application on port 8000
    ports:
      - '8000:8000'

    # Load environment variables from the project root .env
    env_file:
      - .env

    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./api
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./api/uv.lock

  web:
    image: '${DOCKER_IMAGE_WEB?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    ports:
      - '5173:80'
    build:
      context: ./web
      args:
        - VITE_API_URL=http://localhost:8000/api/v1
        - VITE_BASE_URL=http://localhost:5173
        - NODE_ENV=production
    depends_on:
      api:
        condition: service_healthy
